[
  {
    "type": 1,
    "title": "HomeAssistant",
    "name": "HomeAssistant",
    "description": "Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.",
    "logo": "https://github.com/home-assistant/brands/raw/master/core_integrations/_homeassistant/icon.png",
    "image": "homeassistant/home-assistant:stable",
    "network_mode": "host",
    "restart_policy": "unless-stopped",
    "categories": [
      "Home Automation"
    ],
    "platform": "linux",
    "ports": [
      {
      "WebUI": "8123:8123/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "!config/HomeAssistant/"
      },
      {
        "container": "/etc/localtime",
        "bind": "!localtime"
      }
    ]
  },
  {
    "type": 1,
    "title": "NodeRed",
    "name": "Node-Red",
    "description": "Node-RED is a visual tool for wiring the Internet of Things. Node-RED is a tool for wiring together hardware devices, APIs and online services in new and interesting ways.See NodeRed.org and flows.nodered.org for more info.",
    "logo": "https://nodered.org/about/resources/media/node-red-icon.png",
    "image": "nodered/node-red",
    "network_mode": "bridge",
    "restart_policy": "unless-stopped",
    "categories": [
      "Home Automation"
    ],
    "platform": "linux",
    "ports": [
      {
      "WebUI": "1880:1880/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "!config/NodeRed/"
      },
      {
        "container": "/etc/localtime",
        "bind": "!localtime"
      }
    ]
  },  
  {
    "type": 1,
    "title": "Zwavejs2MQTT",
    "name": "ZwaveJS2MQTT",
    "description": "Fully configurable Zwave to MQTT Gateway and Control Panel.",
    "logo": "https://raw.githubusercontent.com/selfhosters/unRAID-CA-templates/master/templates/img/zwavejs2mqtt.png",
    "image": "zwavejs/zwavejs2mqtt:latest",
    "network_mode": "bridge",
    "restart_policy": "unless-stopped",
    "categories": [
      "Home Automation"
    ],
    "platform": "linux",
    "ports": [
      {
      "WebUI": "8091:8091/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "!config/zwavejs2mqtt/"
      },
      {
        "container": "/etc/localtime",
        "bind": "!localtime"
      }
    ]
  },
  {
    "type": 1,
    "title": "NGINXproxyManager",
    "name": "NGINXproxyManager",
    "description": "Nginx Proxy Manager enables you to easily forward to your websites running at home or otherwise, including free SSL, without having to know too much about Nginx or Letsencrypt",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/nginx-proxy-manager-icon.png",
    "image": "jlesage/nginx-proxy-manager",
    "network_mode": "bridge",
    "restart_policy": "unless-stopped",
    "categories": [
      "Security"
    ],
    "platform": "linux",
    "ports": [
      {
      "WebUI": "8181:8181/tcp",
      "http": "18880:80/tcp",
      "https": "18443:443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "!config/NGINXproxymanager/"
      },
      {
        "container": "/etc/localtime",
        "bind": "!localtime"
      }
    ],
    "env": [
      {
        "name": "USER_ID",
        "label": "USER_ID",
        "default": "!PUID"
      },
      {
        "name": "GROUP_ID",
        "label": "GROUP_ID",
        "default": "!PGID"
      },      
      {
        "name": "UMASK",
        "label": "UMASK",
        "default": "0"
      },          
      {
        "name": "APP_NICENESS",
        "label": "APP_NICENESS",
        "default": ""
      },  
      {
        "name": "DISABLE_IPV6",
        "label": "DISABLE_IPV6",
        "default": "0"
      }  
     ]
  },
  {
    "type": 1,
    "title": "Frigate",
    "name": "Frigate",
    "description": "Fully configurable NVR with object vision",
    "logo": "https://raw.githubusercontent.com/yayitazale/unraid-templates/main/frigate_unraid.PNG",
    "image": "blakeblackshear/frigate:stable",
    "network_mode": "bridge",
    "restart_policy": "unless-stopped",
    "categories": [
      "Home Automation"
    ],
    "platform": "linux",
    "ports": [
      {
      "WebUI": "5000:5000/tcp",
      "communication": "1935:1935/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "!config/frigate/"
      },
      {
        "container": "/etc/localtime",
        "bind": "!localtime"
      },
      {
        "container": "/media/frigate/clips",
        "bind": "!media/frigate/clips"
      },
      {
        "container": "/media/frigate/recordings",
        "bind": "!media/frigate/recordings"
      },
      {
        "container": "/tmp/cache",
        "bind": "!cache/frigate"
      }     
    ],
    "env" : [
      {
      "FRIGATE_RTSP_PASSWORD": "!password"
      }
    ]
  },
  {
    "type": 1,
    "title": "FrigateNvidia",
    "name": "FrigateNvidia",
    "description": "Fully configurable NVR with object vision with Nvidia",
    "logo": "https://raw.githubusercontent.com/yayitazale/unraid-templates/main/frigate_unraid.PNG",
    "image": "blakeblackshear/frigate:stable-amd64nvidia",
    "network_mode": "bridge",
    "restart_policy": "unless-stopped",
    "categories": [
      "Home Automation"
    ],
    "platform": "linux",
    "ports": [
      {
      "WebUI": "5000:5000/tcp",
      "communication": "1935:1935/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/config",
        "bind": "!config/frigate/"
      },
      {
        "container": "/etc/localtime",
        "bind": "!localtime"
      },
      {
        "container": "/media/frigate/clips",
        "bind": "!media/frigate/clips"
      },
      {
        "container": "/media/frigate/recordings",
        "bind": "!media/frigate/recordings"
      },
      {
        "container": "/tmp/cache",
        "bind": "!cache/frigate"
      }     
    ],
    "env" : [
      {
      "name": "FRIGATE_RTSP_PASSWORD",
      "label": "FRIGATE_RTSP_PASSWORD",
      "default": "password"
      },
      {
      "name": "NVIDIA_VISIBLE_DEVICES",
      "label": "NVIDIA_VISIBLE_DEVICES",
      "default": "all"    
      },
      {
      "name": "NVIDIA_DRIVER_CAPABILITIES",
      "label": "NVIDIA_DRIVER_CAPABILITIES",
      "default": "all"            
      }
    ]
  },
  {
    "type": 1,
    "title": "NGINXProxyManager-JC",
    "name": "NGINXProxyManager",
    "description": "JC NGINX Proxy Manager, needs mariadb/mysql",
    "logo": "https://raw.githubusercontent.com/jlesage/docker-templates/master/jlesage/images/nginx-proxy-manager-icon.png",
    "image": "jc21/nginx-proxy-manager:latest",
    "network_mode": "bridge",
    "restart_policy": "unless-stopped",
    "categories": [
      "Database"
    ],
    "platform": "linux",
    "ports": [
      {
      "WebUI": "81:81/tcp",
      "http": "80:80/tcp",
      "https": "443:443/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/data",
        "bind": "!config/NGINXproxymanager/data"
      },
      {
        "container": "/etc/letsencrypt",
        "bind": "!config/NGINXProxymanager/letsencrypt"
      },  
      {
        "container": "/app/config/production.json",
        "bind": "!config/NGINXProxymanager/config.json"
      }      
    ],
    "env" : [
      {
      "name": "DB_MYSQL_HOST",
      "label": "DB_MYSQL_HOST",
      "default": "MySQL"
      },
      {
      "name": "DB_MYSQL_NAME",
      "label": "DB_MYSQL_NAME",
      "default": "npm"    
      },
      {
      "name": "DB_MYSQL_USER",
      "label": "DB_MYSQL_USER",
      "default": "homeserver"            
      },
      {
      "name": "DB_MYSQL_PASSWORD",
      "label": "DB_MYSQL_PASSWORD",
      "default": "npm"            
      },
      {
      "name": "DB_MYSQL_PORT",
      "label": "DB_MYSQL_PORT",
      "default": "3306"            
      }
    ]
  },
  {
    "type": 1,
    "title": "MySQL",
    "name": "MySQL",
    "description": "Mariadb",
    "logo": "https://download.logo.wine/logo/MySQL/MySQL-Logo.wine.png",
    "image": "yobasystems/alpine-mariadb:latest",
    "network_mode": "bridge",
    "restart_policy": "unless-stopped",
    "categories": [
      "Database"
    ],
    "platform": "linux",
    "ports": [
      {
      "communication": "3306:3306/tcp"
      }
    ],
    "volumes": [
      {
        "container": "/var/lib/mysql",
        "bind": "!config/mysql/"
      }    
    ],
    "env" : [
      {
      "name": "MYSQL_ROOT_PASSWORD",
      "label": "MYSQL_ROOT_PASSWORD",
      "default": "password"
      },
      {
      "name": "MYSQL_DATABASE",
      "label": "MYSQL_DATABASE",
      "default": "npm"    
      },
      {
      "name": "MYSQL_USER",
      "label": "MYSQL_USER",
      "default": "homeserver"            
      },
      {
      "name": "MYSQL_PASSWORD",
      "label": "MYSQL_PASSWORD",
      "default": "npm"            
      }
    ]
  }
  ]
